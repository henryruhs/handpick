#!/usr/bin/env node

const program = require('commander');
const createSpinner = require('nanospinner').createSpinner;
const handpick = require('../');
const core = handpick.core;
const option = handpick.option;
const packageObject = require('../package.json');
const targetArray = [];
const filterArray = [];
const managerArray = Object.keys(option.get('managerObject'));
const rangeArray = option.get('rangeArray');

let CORE;

program
	.version(packageObject.name + ' ' + packageObject.version)
	.option('-C, --config <config>')
	.option('-T, --target <target>', null, target => targetArray.push(target))
	.option('-F, --filter <target>', null, filter => filterArray.push(filter))
	.option('-M, --manager <manager>', managerArray.join(' | '))
	.option('-R, --range <range>', rangeArray.join(' | '))
	.option('-P, --path <path>')
	.parse(process.argv);

option.initWithConfig(
{
	config: program.config,
	targetArray: targetArray.length > 0 ? targetArray : option.get('targetArray'),
	filterArray: filterArray.length > 0 ? filterArray : option.get('filterArray'),
	manager: program.manager,
	path: program.path,
	range: program.range
});
CORE = new core(
{
	spinner: createSpinner(),
	option
});
CORE.init();
